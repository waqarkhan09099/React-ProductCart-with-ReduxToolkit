{"ast":null,"code":"import React from 'react';\nimport { createSlice } from '@reduxjs/toolkit';\nconst cartNewItemsSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalPrice: 0\n  },\n  reducers: {\n    addItemtoCart(state, action) {\n      const newItem = action.payload;\n      const existingItems = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItems) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1\n        });\n        state.totalQuantity += 1;\n        state.totalPrice += newItem.price;\n      } else {\n        existingItems.quantity++;\n        state.totalPrice += existingItems.price;\n      }\n    },\n\n    removeItemtoCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem === 1) {\n        state.items.filter(item => item.id !== id);\n        state.totalPrice -= existingItem.price;\n        state.totalQuantity -= existingItem.quantity;\n      } else {\n        existingItem.quantity--;\n        state.totalPrice -= existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartNewItemsSlice.actions;\nexport default cartNewItemsSlice.reducer;","map":{"version":3,"sources":["D:/product Cart/React-ProductCart-with-ReduxToolkit/src/Store/CartSlice.js"],"names":["React","createSlice","cartNewItemsSlice","name","initialState","items","totalQuantity","totalPrice","reducers","addItemtoCart","state","action","newItem","payload","existingItems","find","item","id","push","title","price","quantity","removeItemtoCart","existingItem","filter","cartActions","actions","reducer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,MAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE,CAFL;AAGVC,IAAAA,UAAU,EAAE;AAHF,GAFoB;AAOlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,aAAa,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAAtB;;AACA,UAAI,CAACH,aAAL,EAAoB;AAChBJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CACI;AACID,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADhB;AAEIE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFnB;AAGIC,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAHnB;AAIIC,UAAAA,QAAQ,EAAE;AAJd,SADJ;AAQAX,QAAAA,KAAK,CAACJ,aAAN,IAAqB,CAArB;AACAI,QAAAA,KAAK,CAACH,UAAN,IAAkBK,OAAO,CAACQ,KAA1B;AAEH,OAZD,MAaK;AACDN,QAAAA,aAAa,CAACO,QAAd;AACAX,QAAAA,KAAK,CAACH,UAAN,IAAoBO,aAAa,CAACM,KAAlC;AAEH;AACJ,KAtBK;;AAuBNE,IAAAA,gBAAgB,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMU,YAAY,GAAGb,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;;AACA,UAAIM,YAAY,KAAK,CAArB,EAAwB;AACpBb,QAAAA,KAAK,CAACL,KAAN,CAAYmB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC;AACAP,QAAAA,KAAK,CAACH,UAAN,IAAoBgB,YAAY,CAACH,KAAjC;AACAV,QAAAA,KAAK,CAACJ,aAAN,IAAuBiB,YAAY,CAACF,QAApC;AACH,OAJD,MAKK;AACDE,QAAAA,YAAY,CAACF,QAAb;AACAX,QAAAA,KAAK,CAACH,UAAN,IAAoBgB,YAAY,CAACH,KAAjC;AACH;AAEJ;;AApCK;AAPwB,CAAD,CAArC;AA+CA,OAAO,MAAMK,WAAW,GAAGvB,iBAAiB,CAACwB,OAAtC;AAEP,eAAexB,iBAAiB,CAACyB,OAAjC","sourcesContent":["import React from 'react';\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartNewItemsSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        totalPrice: 0\r\n    },\r\n    reducers: {\r\n        addItemtoCart(state, action) {\r\n            const newItem = action.payload\r\n            const existingItems = state.items.find(item => item.id === newItem.id)\r\n            if (!existingItems) {\r\n                state.items.push(\r\n                    {\r\n                        id: newItem.id,\r\n                        title: newItem.title,\r\n                        price: newItem.price,\r\n                        quantity: 1\r\n                    }\r\n                )\r\n                state.totalQuantity+=1\r\n                state.totalPrice+=newItem.price\r\n\r\n            }\r\n            else {\r\n                existingItems.quantity++;\r\n                state.totalPrice += existingItems.price;\r\n\r\n            }\r\n        },\r\n        removeItemtoCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            if (existingItem === 1) {\r\n                state.items.filter(item => item.id !== id)\r\n                state.totalPrice -= existingItem.price\r\n                state.totalQuantity -= existingItem.quantity\r\n            }\r\n            else {\r\n                existingItem.quantity--;\r\n                state.totalPrice -= existingItem.price;\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartActions = cartNewItemsSlice.actions;\r\n\r\nexport default cartNewItemsSlice.reducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}